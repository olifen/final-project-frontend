"use strict";function Auth(e,t){e.loginUrl=t+"/login",e.signupUrl=t+"/register",e.tokenPrefix=""}function RegisterController(e,t){function n(){e.signup(r.user).then(function(){t.go("login")})}var r=this;r.user={},r.submit=n}function LoginController(e,t){function n(){e.login(r.credentials).then(function(){t.go("gamesIndex")})}var r=this;r.credentials={},r.submit=n}function Game(e,t){return new e(t+"/games/:id",{id:"@id"},{update:{method:"PUT"}})}function GamesIndexController(e){var t=this;t.all=e.query()}function GamesShowController(e,t,n,r,o){function l(){g.game.$remove(function(){t.go("gamesIndex")})}function s(e){n.delete(e,function(){var t=g.game.memberships.indexOf(e);g.game.memberships.splice(t,1)})}function a(){return g.game.$resolved?g.game.memberships.length:0}function i(){return g.game.$resolved?g.game.no_of_places:0}function u(){return a()<i()}function c(){return g.game.memberships.findIndex(function(e){return e.user.id===g.currentLoggedInUser.id})>-1}function m(){var e={game_id:t.params.id};n.save(e,function(e){console.log(e),r.location.reload()})}var g=this;g.currentLoggedInUser=o.getPayload(),g.delete=l,g.leaveGame=s,g.game=e.get(t.params),g.canJoinGame=u,g.alreadyInGame=c,g.addMembership=m}function GamesNewController(e,t,n){function r(){e.save(o.game,function(){t.go("gamesIndex")})}var o=this;o.game={},o.create=r,o.venues=n.query()}function GamesEditController(e,t){function n(){r.game.$update(function(){t.go("gamesShow",t.params)})}var r=this;r.game=e.get(t.params),this.update=n}function googleMap(e){return{restrict:"E",replace:!0,template:'<div class="google-map"></div>',scope:{venues:"=",center:"="},link:function(t,n){function r(){s.forEach(function(e){e.setMap(null)}),s=[]}var o=new e.google.maps.Map(n[0],{center:{lat:51.50853,lng:-.076132},zoom:11});if(t.center&&t.center.lat&&t.center.lng){var l={lat:t.center.lat,lng:t.center.lng};o.setCenter(l),new e.google.maps.Marker({position:l,map:o})}var s=[];t.$watch("venues.$resolved",function(){r(),t.venues&&t.venues.$resolved&&t.venues.forEach(function(t){if(t.lat&&t.lng){var n=new e.google.maps.Marker({position:{lat:t.lat,lng:t.lng},map:o,animation:e.google.maps.Animation.DROP});n.addListener("click",function(){}),s.push(n)}})})}}}function googleplace(e){return{restrict:"A",require:"ngModel",scope:{venue:"=",user:"="},link:function(t,n,r,o){var l={types:[],componentRestrictions:{country:"GB"}},s=new e.google.maps.places.Autocomplete(n[0],l);s.addListener("place_changed",function(){var e=s.getPlace(),r=e.geometry.location.toJSON();t.venue&&(t.venue.lat=r.lat,t.venue.lng=r.lng,t.venue.postcode=e.formatted_address),t.user&&(t.user.lat=r.lat,t.user.lng=r.lng),console.log("scope:",t.user),o.$setViewValue(n.val())})}}}function MainController(e,t,n){function r(){e.logout().then(function(){t.go("home")})}function o(n,r){l.message=null,!e.isAuthenticated()&&s.includes(r.name)&&(n.preventDefault(),t.go("login"),l.message="You must be logged in to go there")}var l=this;l.isLoggedIn=e.isAuthenticated,l.message=null;var s=["usersEdit","usersNew"];n.$on("$stateChangeStart",o),l.logout=r}function Membership(e,t){return new e(t+"/memberships/:id",{id:"@id"},{update:{method:"PUT"}})}function Router(e,t){e.state("home",{url:"/home",templateUrl:"/templates/home.html"}).state("usersIndex",{url:"/users",templateUrl:"/templates/usersIndex.html",controller:"UsersIndexController as usersIndex"}).state("register",{url:"/register",templateUrl:"/templates/register.html",controller:"RegisterController as register"}).state("login",{url:"/login",templateUrl:"/templates/login.html",controller:"LoginController as login"}).state("usersShow",{url:"/users/:id",templateUrl:"/templates/usersShow.html",controller:"UsersShowController as usersShow"}).state("usersEdit",{url:"/users/:id/edit",templateUrl:"/templates/usersEdit.html",controller:"UsersEditController as usersEdit"}).state("gamesIndex",{url:"/games",templateUrl:"/templates/gamesIndex.html",controller:"GamesIndexController as gamesIndex"}).state("gamesNew",{url:"/games/new",templateUrl:"/templates/gamesNew.html",controller:"GamesNewController as gamesNew"}).state("gamesShow",{url:"/games/:id",templateUrl:"/templates/gamesShow.html",controller:"GamesShowController as gamesShow"}).state("gamesEdit",{url:"/games/:id/edit",templateUrl:"/templates/gamesEdit.html",controller:"GamesEditController as gamesEdit"}).state("venuesIndex",{url:"/venues",templateUrl:"/templates/venuesIndex.html",controller:"VenuesIndexController as venuesIndex"}).state("venuesNew",{url:"/venues/new",templateUrl:"/templates/venuesNew.html",controller:"VenuesNewController as venuesNew"}).state("venuesShow",{url:"/venues/:id",templateUrl:"/templates/venuesShow.html",controller:"VenuesShowController as venuesShow"}).state("venuesEdit",{url:"/venues/:id/edit",templateUrl:"/templates/venuesEdit.html",controller:"VenuesEditController as venuesEdit"}),t.otherwise("/home")}function User(e,t){return new e(t+"/users/:id",{id:"@id"},{update:{method:"PUT"}})}function UsersIndexController(e){var t=this;t.all=e.query()}function UsersShowController(e,t){function n(){r.user.$remove(function(){t.go("usersIndex")})}var r=this;r.user=e.get(t.params),r.delete=n}function UsersEditController(e,t){function n(){r.user.$update(function(){t.go("usersShow",t.params)})}var r=this;r.user=e.get(t.params),this.update=n}function Venue(e,t){return new e(t+"/venues/:id",{id:"@id"},{update:{method:"PUT"}})}function VenuesIndexController(e){var t=this;t.all=e.query()}function VenuesShowController(e,t){function n(){r.venue.$remove(function(){t.go("venuesIndex")})}var r=this;r.delete=n,r.venue=e.get({id:t.params.id})}function VenuesNewController(e,t){function n(){e.save(r.venue,function(){t.go("venuesIndex")})}var r=this;r.game={},r.create=n}function VenuesEditController(e,t){function n(){r.venue.$update(function(){t.go("venuesShow",t.params)})}var r=this;r.venue=e.get(t.params),this.update=n}angular.module("finalProject",["ngResource","ui.router","satellizer"]).constant("API_URL","http://localhost:3000/api").config(Auth),Auth.$inject=["$authProvider","API_URL"],angular.module("finalProject").controller("RegisterController",RegisterController).controller("LoginController",LoginController),RegisterController.$inject=["$auth","$state"],LoginController.$inject=["$auth","$state"],angular.module("finalProject").factory("Game",Game),Game.$inject=["$resource","API_URL"],angular.module("finalProject").controller("GamesIndexController",GamesIndexController).controller("GamesShowController",GamesShowController).controller("GamesNewController",GamesNewController).controller("GamesEditController",GamesEditController),GamesIndexController.$inject=["Game"],GamesShowController.$inject=["Game","$state","Membership","$window","$auth"],GamesNewController.$inject=["Game","$state","Venue"],GamesEditController.$inject=["Game","$state"],angular.module("finalProject").directive("googleMap",googleMap),googleMap.$inject=["$window"],angular.module("finalProject").directive("googleplace",googleplace),googleplace.$inject=["$window"],angular.module("finalProject").controller("MainController",MainController),MainController.$inject=["$auth","$state","$rootScope"],angular.module("finalProject").factory("Membership",Membership),Membership.$inject=["$resource","API_URL"],angular.module("finalProject").config(Router),Router.$inject=["$stateProvider","$urlRouterProvider"],angular.module("finalProject").factory("User",User),User.$inject=["$resource","API_URL"],angular.module("finalProject").controller("UsersIndexController",UsersIndexController).controller("UsersShowController",UsersShowController).controller("UsersEditController",UsersEditController),UsersIndexController.$inject=["User"],UsersShowController.$inject=["User","$state"],UsersEditController.$inject=["User","$state"],angular.module("finalProject").factory("Venue",Venue),Venue.$inject=["$resource","API_URL"],angular.module("finalProject").controller("VenuesIndexController",VenuesIndexController).controller("VenuesShowController",VenuesShowController).controller("VenuesNewController",VenuesNewController).controller("VenuesEditController",VenuesEditController),VenuesIndexController.$inject=["Venue"],VenuesShowController.$inject=["Venue","$state"],VenuesNewController.$inject=["Venue","$state"],VenuesEditController.$inject=["Venue","$state"];
//# sourceMappingURL=app.js.map
